{
  "version" : "2017-02-28",
  "operation" : "UpdateItem",
  "key" : {
      "bidLineId" : $util.dynamodb.toDynamoDBJson($ctx.args.bidLineId),
      "station": $util.dynamodb.toDynamoDBJson($ctx.args.station)
  },

  ## Set up some space to keep track of things we're updating **
  #set( $expNames  = {} )
  #set( $expValues = {} )
  #set( $expSet = {} )

  ## Iterate through each argument, skipping attributes that are part of the key "bidLineId" and "station" **
  #foreach( $entry in $util.map.copyAndRemoveAllKeys($ctx.args.input, ["bidLineId","station"]).entrySet() )
      ## set (or update) the attribute on the item in DynamoDB **
      $!{expSet.put("#${entry.key}", ":${entry.key}")}
      $!{expNames.put("#${entry.key}", "${entry.key}")}
      $!{expValues.put(":${entry.key}", $util.dynamodb.toDynamoDB($entry.value))}
  #end

  ## Start building the update expression, starting with attributes we're going to SET **
  #set( $expression = "" )
  #if( !${expSet.isEmpty()} )
      #set( $expression = "SET" )
      #foreach( $entry in $expSet.entrySet() )
          #set( $expression = "${expression} ${entry.key} = ${entry.value}" )
          #if ( $foreach.hasNext )
              #set( $expression = "${expression}," )
          #end
      #end
  #end

  ## Finally, write the update expression into the document, along with any expressionNames and expressionValues **
  "update" : {
      "expression" : "${expression}",
      #if( !${expNames.isEmpty()} )
          "expressionNames" : $utils.toJson($expNames),
      #end
      #if( !${expValues.isEmpty()} )
          "expressionValues" : $utils.toJson($expValues),
      #end
  }
}

